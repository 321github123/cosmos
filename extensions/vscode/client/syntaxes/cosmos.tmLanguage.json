{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "cosmos",
    "scopeName": "source.cosmos",
    "patterns": [
        { "include": "#rubyStatements" },
        { "include": "#comments" },
        { "include": "#strings" },
        { "include": "#numbers" },
        { "include": "#systemConfig" },
        { "include": "#packetDef"},
        { "include": "#packetItem"},
        { "include": "#itemProperties" }
      ],
    "repository":{
        "comments": {
            "begin": "(^\\s+)?(?=#)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.whitespace.comment.leading"
                }
            },
            "end": "(?!\\G)",
            "patterns": [
                {
                    "begin": "#",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment"
                        }
                    },
                    "end": "\\n",
                    "name": "comment.line.number-sign",
                    "patterns": [
                        {
                            "match": "\\\\\\n",
                            "name": "constant.character.escape.continuation"
                        }
                    ]
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "description": "Single Quoted String",
                    "begin": "'",
                    "end": "'",
                    "name": "string.quoted.single"
                },
                {
                    "description": "Double Quoted String",
                    "begin": "\"",
                    "end": "\"",
                    "name": "string.quoted.double"
                },
                {
                    "match": "(?<=UNITS\\s)\\b\\S+\\s\\S+\\s*$",
                    "name": "string.unquoted"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "match": "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}",
                    "name": "constant.numeric"
                },
                {
                    "match": "0x[a-zA-Z0-9]+",
                    "name": "constant.numeric"
                },
                {
                    "match": "-?[0-9]+\\.[0-9]+",
                    "name": "constant.numeric"
                },
                {
                    "match": "[0-9]",
                    "name": "constant.numeric"
                }
            ]
        },
        "rubyStatements": {
            "patterns": [
                {
                    "begin": "<%",
                    "end": "%>",
                    "patterns":[
                        {
                        "match": ".*",
                        "include": "source.ruby"
                        }
                    ]
                },
                {
                    "begin": "(?<=GENERIC_READ_CONVERSION_START)",
                    "include": "source.ruby",
                    "end": "(?=GENERIC_READ_CONVERSION_END)"
                },
                {
                    "begin": "(?<=GENERIC_WRITE_CONVERSION_START)",
                    "include": "source.ruby",
                    "end": "(?=GENERIC_WRITE_CONVERSION_END)"
                }
            ]
        },
        "systemConfig": {
            "patterns": [
                { "include": "#declareTarget" }
              ],
            "repository":{
                "declareTarget": {
                    "patterns": [
                        {
                            "match": "^\\s*(DECLARE_TARGET)\\b",
                            "name": "storage.type"
                        },
                        {
                            "match": "(?<=DECLARE_TARGET\\s)\\b\\S+(?=\\s)",
                            "name": "support.class"
                        }
                    ]
                }
            }
        },
        "packetDef": {
            "patterns": [
                {
                    "match": "^(TELEMETRY|COMMAND)\\b",
                    "name": "storage.type"
                },
                {
                    "match": "(?<=TELEMETRY\\s)\\b\\S+(?=\\s)",
                    "name": "support.class"
                },
                {
                    "match": "(?<=COMMAND\\s)\\b\\S+(?=\\s)",
                    "name": "support.class"
                },
                {
                    "match": "(?<=\\s)\\b\\S+(?=\\sBIG_ENDIAN)",
                    "name": "variable.other"
                },
                {
                    "match": "(?<=\\s)\\b\\S+(?=\\sLITTLE_ENDIAN)",
                    "name": "variable.other"
                },
                {
                    "match": "\\b(BIG_ENDIAN|LITTLE_ENDIAN)\\b",
                    "name": "keyword.control"
                }
            ]
        },
        "packetItem": {
            "patterns": [
                {
                    "match": "^\\s*(APPEND_ID_|ID_)(ITEM|PARAMETER)\\b",
                    "name": "support.function"
                },
                {
                    "match": "^\\s*APPEND_(ITEM|PARAMETER)\\b",
                    "name": "storage.modifer"
                },
                {
                    "match": "^\\s*(ITEM|PARAMETER)\\b",
                    "name": "storage.modifer"
                },
                {
                    "match": "(?<=ITEM\\s)\\b\\S+(?=\\s)",
                    "name": "variable.parameter"
                },
                {
                    "match": "(?<=APPEND_ITEM\\s)\\b\\S+(?=\\s)",
                    "name": "variable.parameter"
                },
                {
                    "match": "(?<=PARAMETER\\s)\\b\\S+(?=\\s)",
                    "name": "variable.parameter"
                },
                {
                    "match": "(?<=APPEND_PARAMETER\\s)\\b\\S+(?=\\s)",
                    "name": "variable.parameter"
                },
                {
                    "match": "\\b(INT|UINT|FLOAT|DERIVED|STRING|BLOCK)\\b",
                    "name": "storage.type"
                }
            ]
        },
        "itemProperties": {
            "patterns": [
                {
                    "match": "\\b(HAZARDOUS)\\b",
                    "name": "invalid.deprecated"
                },
                {
                    "match": "^\\s*(FORMAT_STRING|UNITS|DESCRIPTION|META|REQUIRED|MINIMUM_VALUE|MAXIMUM_VALUE|DEFAULT_VALUE|STATE|WRITE_CONVERSION|POLY_WRITE_CONVERSION|SEG_POLY_WRITE_CONVERSION|GENERIC_WRITE_CONVERSION_START|GENERIC_WRITE_CONVERSION_END|OVERFLOW)\\b",
                    "name": "keyword.control"
                },
                {
                    "match": "^\\s*(FORMAT_STRING|UNITS|DESCRIPTION|META|STATE|READ_CONVERSION|POLY_READ_CONVERSION|SEG_POLY_READ_CONVERSION|GENERIC_READ_CONVERSION_START|GENERIC_READ_CONVERSION_END|LIMITS|LIMITS_RESPONSE)\\b",
                    "name": "keyword.control"
                },
                {
                    "match": "(?:(?<=STATE\\s)|(?<=META\\s)|(?<=LIMITS\\s))\\b\\S+(?=\\s)",
                    "name": "variable.parameter"
                },
                {
                    "match": "META\\K\\s\\S+\\s+\\K.*",
                    "name": "support.variable"
                },
                {
                    "match": "(?<=\\s)(ENABLED|DISABLED)",
                    "name": "support.type"
                }
            ]
        }
    }
}