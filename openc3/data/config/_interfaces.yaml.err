---
tcpip_client_interface.rb:
  parameters:
    - name: Host
      required: true
      description: Machine name to connect to. Can be either a named
        machine (DNS entry) or IP address.
      values: .+
    - name: Write Port
      required: true
      description: Port which OpenC3 writes commands to
      values: \d{2,5}
    - name: Read Port
      required: true
      description: Port which OpenC3 reads telemetry from
      values: \d{2,5}
    - name: Write Timeout
      required: true
      description: Number of seconds to wait before aborting the write.
        Pass 'nil' to block on write.
      values: .+
    - name: Read Timeout
      required: true
      description: Number of seconds to wait before aborting the read.
        Pass 'nil' to block on read.
      values: .+
    - name: Protocol Type
      required: true
      description: Protocol to apply on the interface data
      values:
        - BURST:
          description: The Burst Stream Protocol simply reads as much data as it can from
            the stream before returning the data as a OpenC3 Packet. This Protocol relies
            on regular bursts of data delimited by time and thus is not very robust. However
            it can utilize a sync pattern which does allow it to re-sync from the stream if
            necessary.
          parameters:
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes starting with the sync pattern
              if the sync pattern is being used. Default is 0 (don't discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is 'nil' (no sync pattern).
            values: ".+"
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets Default
              is false.
            values:
            - 'true'
            - 'false'
        FIXED:
          description: The Fixed Stream Protocol reads a preset minimum amount of data from
            the stream which is necessary to properly identify all the defined packets using
            the interface. It then identifies the packet and proceeds to read as much data
            from the stream as necessary to create the packet which it then returns. This
            stream relies on all the packets on the interface being fixed in length. For example,
            all the packets using the interface are a fixed size and contain a simple header
            with a 32 bit sync pattern followed by a 16 bit ID. The Fixed Stream Protocol
            would elegantly handle this case with a minimum read size of 6 bytes.
          parameters:
          - name: Minimum ID Size
            required: true
            description: The minimum amount of bytes needed to identify a packet. All the
              packet definitions must declare their ID_ITEM(s) within this given amount of
              bytes.
            values: "\\d+"
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes starting with the sync pattern
              if the sync pattern is being used. Default is 0 (do not discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is 'nil' (no sync pattern).
            values: ".+"
          - name: Telemetry Stream
            required: false
            description: Whether the stream is returning telemetry. Default is true.
            values:
            - 'true'
            - 'false'
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets. Default
              is false.
            values:
            - 'false'
            - 'true'
        LENGTH:
          description: The Length Stream Protocol depends on a length field at a fixed location
            in the defined packets using the interface. It then reads enough data to grab
            the length field, decodes it, and reads the remaining length of the packet. For
            example, all the packets using the interface contain a CCSDS header with a length
            field. The Length Stream Protocol can be set up to handle the length field and
            even the "length - 1" offset the CCSDS header uses.
          parameters:
          - name: Length Bit Offset
            required: false
            description: The bit offset of the length field. Every packet using this interface
              must have the same structure such that the length field is the same size at
              the same location. Be sure to account for the length of the Sync Pattern in
              this value (if present). Default is 0.
            values: "\\d+"
          - name: Length Bit Size
            required: false
            description: The size in bits of the length field. Default is 16.
            values: "\\d+"
          - name: Length Value Offset
            required: false
            description: The offset to apply to the length field value. For example if the
              length field indicates packet length minus one, this value should be one. Be
              sure to account for the length of the Sync Pattern in this value (if present).
              Default is 0.
            values: "\\d+"
          - name: Bytes per Count
            required: false
            description: The number of bytes per each length field 'count'. This is used if
              the units of the length field is something other than bytes, for example if
              the length field count is in words. Default is 1.
            values: "\\d+"
          - name: Length Endianness
            required: false
            description: The endianness of the length field.
            values:
            - BIG_ENDIAN
            - LITTLE_ENDIAN
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes including the sync pattern
              if the sync pattern is being used. Discarding is one of the very last steps
              so any size and offsets above need to account for all the data before discarding.
              Default is 0 (do not discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is nil (no sync pattern)
            values: ".+"
          - name: Max Length
            required: false
            description: The maximum allowed value in the length field. Default is nil (no
              maximum length)
            values: ".+"
          - name: Fill Length and Sync Pattern
            required: false
            description: Setting this flag to true causes the length field and sync pattern
              (if present) to be filled automatically on outgoing packets. Default is false
            values:
            - 'false'
            - 'true'
        TERMINATED:
          description: The Terminated Stream Protocol delineates packets using termination
            characters found at the end of every packet. It continuously reads data from the
            stream until the termination characters are found at which point it returns the
            packet data. For example, all the packets using the interface are followed by
            0xABCD. This data can either be a part of each packet that is kept or something
            which is known only by the Terminated Stream Protocol and simply thrown away.
          parameters:
          - name: Write Termination Characters
            required: true
            description: The data to write to the stream after writing a command packet. Given
              as a hex string such as 0xABCD.
            values: ".+"
          - name: Read Termination Characters
            required: true
            description: The characters at the end of the stream which delineate the end of
              a telemetry packet. Given as a hex string such as 0xABCD.
            values: ".+"
          - name: Strip Read Termination
            required: false
            description: Whether to remove the read termination characters from the stream
              before returning the telemetry packet. Default is true.
            values:
            - 'true'
            - 'false'
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes including the sync pattern
              if the sync pattern is being used. Default is 0 (do not discard bytes)
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is nil (no sync pattern)
            values: ".+"
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets Default
              is false
            values:
            - 'false'
            - 'true'
        PREIDENTIFIED:
          description: The Preidentified Stream Protocol is used internally by the OpenC3
            Command and Telemetry Server only and delineates packets using a custom OpenC3
            header. This stream Protocol is configured by default on port 7779 and is created
            by the Command and Telemetry Server to allow tools to connect and receive the
            entire packet stream. The Telemetry Grapher uses this port to receive all the
            packets following through the Command and Telemetry Server in case any need to
            be graphed.
          parameters:
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              AFTER the sync pattern will be returned. The sync pattern itself is discarded.
              Default is nil (no sync pattern)
            values: ".+"
          - name: Max Length
            required: false
            description: The maximum allowed value in the length field. Default is nil (no
              maximum length)
            values: ".+"
        TEMPLATE:
          description: !binary |-
            VGhlIFRlbXBsYXRlIFN0cmVhbSBQcm90b2NvbCB3b3JrcyBtdWNoIGxpa2UgdGhlIFRlcm1pbmF0ZWQgU3RyZWFtIFByb3RvY29sIGV4Y2VwdCBpdCBkZXNpZ25lZCBmb3IgdGV4dC1iYXNlZCBjb21tYW5kIGFuZCByZXNwb25zZSB0eXBlIGludGVyZmFjZXMgc3VjaCBhcyBTQ1BJIChTdGFuZGFyZCBDb21tYW5kcyBmb3IgUHJvZ3JhbW1hYmxlIEluc3RydW1lbnRzKS4gSXQgZGVsaW5lYXRlcyBwYWNrZXRzIGluIHRoZSBzYW1lIHdheSBhcyB0aGUgdGVybWluYXRlZCBzdHJlYW0gcHJvdG9jb2wgZXhjZXB0IGVhY2ggcGFja2V0IGlzIHJlZmVycmVkIHRvIGFzIGEgbGluZSAoYmVjYXVzZSBlYWNoIHVzdWFsbHkgY29udGFpbnMgYSBsaW5lIG9mIHRleHQpLiBGb3Igb3V0Z29pbmcgcGFja2V0cyBhIENNRF9URU1QTEFURSBmaWVsZCBpcyBleHBlY3RlZCB0byBleGlzdCBpbiB0aGUgcGFja2V0LiBUaGlzIGZpZWxkIGNvbnRhaW5zIGEgdGVtcGxhdGUgc3RyaW5nIHdpdGggaXRlbXMgdG8gYmUgZmlsbGVkIGluIGRlbGluaWF0ZWQgd2l0aGluIEhUTUwgdGFnIHN0eWxlIGJyYWNrZXRzIOKAnCIuIFRoZSBUZW1wbGF0ZSBTdHJlYW0gUHJvdG9jb2wgd2lsbCByZWFkIHRoZSBuYW1lZCBpdGVtcyBmcm9tIHdpdGhpbiB0aGUgcGFja2V0IGZpbGwgaW4gdGhlIENNRF9URU1QTEFURS4gVGhpcyBmaWxsZWQgaW4gc3RyaW5nIGlzIHRoZW4gc2VudCBvdXQgcmF0aGVyIHRoYW4gdGhlIG9yaWdpbmFsbHkgcGFzc2VkIGluIHBhY2tldC4gQ29ycmVzcG9uZGluZ2x5LCBpZiBhIHJlc3BvbnNlIGlzIGV4cGVjdGVkIHRoZSBvdXRnb2luZyBwYWNrZXQgc2hvdWxkIGluY2x1ZGUgYSBSU1BfVEVNUExBVEUgYW5kIFJTUF9QQUNLRVQgZmllbGQuIFRoZSBSU1BfVEVNUExBVEUgaXMgdXNlZCB0byBleHRyYWN0IGRhdGEgZnJvbSB0aGUgcmVzcG9uc2Ugc3RyaW5nIGFuZCBidWlsZCBhIGNvcnJlc3BvbmRpbmcgUlNQX1BBQ0tFVC4gU2VlIHRoZSBURU1QTEFURSB0YXJnZXQgd2l0aGluIHRoZSBPcGVuQzMgRGVtbyBjb25maWd1cmF0aW9uIGZvciBhbiBleGFtcGxlIG9mIHVzYWdlLg==
          parameters:
          - name: Write Termination Characters
            required: true
            description: The data to write to the stream after writing a command packet. Given
              as a hex string such as 0xABCD.
            values: ".+"
          - name: Read Termination Characters
            required: true
            description: The characters at the end of the stream which delineate the end of
              a telemetry packet. Given as a hex string such as 0xABCD.
            values: ".+"
          - name: Ignore Lines
            required: false
            description: Number of response lines to ignore (completely drop). Default is
              0.
            values: "\\d+"
          - name: Initial Read Delay
            required: false
            description: An initial delay after connecting after which the stream will be
              read till empty and data dropped. Useful for discarding connect headers and
              initial prompts. Default is nil (no initial read).
            values: ".+"
          - name: Response Lines
            required: false
            description: The number of lines that make up expected responses. Default is 1.
            values: "\\d+"
          - name: Strip Read Termination
            required: false
            description: Whether to remove the read termination characters from the stream
              before returning the telemetry packet. Default is true.
            values:
            - 'true'
            - 'false'
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes including the sync pattern
              if the sync pattern is being used. Default is 0 (do not discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is nil (no sync pattern).
            values: ".+"
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets. Default
              is false.
            values:
            - 'false'
            - 'true'
          - name: Response Timeout
            required: false
            description: Number of seconds to wait before timing out when waiting for a response.
              Default is 5 seconds.
            values: ".+"
          - name: Response Polling Period
            required: false
            description: Number of seconds to wait between polling for a response. Default
              is 0.02 seconds.
            values: ".+"
          - name: Error Action
            required: false
            description: How to handle errors in the protocol like unexpected responses or
              response timeouts. 'DISCONNECT' to disconnect after errors. The default is 'LOG'
              to log an error and continue.
            values:
            - LOG
            - DISCONNECT
tcpip_server_interface.rb:
  parameters:
    - name: Write Port
      required: true
      description: Port which OpenC3 writes commands to
      values: \d{2,5}
    - name: Read Port
      required: true
      description: Port which OpenC3 reads telemetry from
      values: \d{2,5}
    - name: Write Timeout
      required: true
      description: Number of seconds to wait before aborting the write.
        Pass 'nil' to block on write.
      values: .+
    - name: Read Timeout
      required: true
      description: Number of seconds to wait before aborting the read.
        Pass 'nil' to block on read.
      values: .+
    - name: Protocol Type
      required: true
      description: Protocol to apply on the interface data
      values:
        - BURST:
          description: The Burst Stream Protocol simply reads as much data as it can from
            the stream before returning the data as a OpenC3 Packet. This Protocol relies
            on regular bursts of data delimited by time and thus is not very robust. However
            it can utilize a sync pattern which does allow it to re-sync from the stream if
            necessary.
          parameters:
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes starting with the sync pattern
              if the sync pattern is being used. Default is 0 (don't discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is 'nil' (no sync pattern).
            values: ".+"
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets Default
              is false.
            values:
            - 'true'
            - 'false'
        FIXED:
          description: The Fixed Stream Protocol reads a preset minimum amount of data from
            the stream which is necessary to properly identify all the defined packets using
            the interface. It then identifies the packet and proceeds to read as much data
            from the stream as necessary to create the packet which it then returns. This
            stream relies on all the packets on the interface being fixed in length. For example,
            all the packets using the interface are a fixed size and contain a simple header
            with a 32 bit sync pattern followed by a 16 bit ID. The Fixed Stream Protocol
            would elegantly handle this case with a minimum read size of 6 bytes.
          parameters:
          - name: Minimum ID Size
            required: true
            description: The minimum amount of bytes needed to identify a packet. All the
              packet definitions must declare their ID_ITEM(s) within this given amount of
              bytes.
            values: "\\d+"
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes starting with the sync pattern
              if the sync pattern is being used. Default is 0 (do not discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is 'nil' (no sync pattern).
            values: ".+"
          - name: Telemetry Stream
            required: false
            description: Whether the stream is returning telemetry. Default is true.
            values:
            - 'true'
            - 'false'
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets. Default
              is false.
            values:
            - 'false'
            - 'true'
        LENGTH:
          description: The Length Stream Protocol depends on a length field at a fixed location
            in the defined packets using the interface. It then reads enough data to grab
            the length field, decodes it, and reads the remaining length of the packet. For
            example, all the packets using the interface contain a CCSDS header with a length
            field. The Length Stream Protocol can be set up to handle the length field and
            even the "length - 1" offset the CCSDS header uses.
          parameters:
          - name: Length Bit Offset
            required: false
            description: The bit offset of the length field. Every packet using this interface
              must have the same structure such that the length field is the same size at
              the same location. Be sure to account for the length of the Sync Pattern in
              this value (if present). Default is 0.
            values: "\\d+"
          - name: Length Bit Size
            required: false
            description: The size in bits of the length field. Default is 16.
            values: "\\d+"
          - name: Length Value Offset
            required: false
            description: The offset to apply to the length field value. For example if the
              length field indicates packet length minus one, this value should be one. Be
              sure to account for the length of the Sync Pattern in this value (if present).
              Default is 0.
            values: "\\d+"
          - name: Bytes per Count
            required: false
            description: The number of bytes per each length field 'count'. This is used if
              the units of the length field is something other than bytes, for example if
              the length field count is in words. Default is 1.
            values: "\\d+"
          - name: Length Endianness
            required: false
            description: The endianness of the length field.
            values:
            - BIG_ENDIAN
            - LITTLE_ENDIAN
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes including the sync pattern
              if the sync pattern is being used. Discarding is one of the very last steps
              so any size and offsets above need to account for all the data before discarding.
              Default is 0 (do not discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is nil (no sync pattern)
            values: ".+"
          - name: Max Length
            required: false
            description: The maximum allowed value in the length field. Default is nil (no
              maximum length)
            values: ".+"
          - name: Fill Length and Sync Pattern
            required: false
            description: Setting this flag to true causes the length field and sync pattern
              (if present) to be filled automatically on outgoing packets. Default is false
            values:
            - 'false'
            - 'true'
        TERMINATED:
          description: The Terminated Stream Protocol delineates packets using termination
            characters found at the end of every packet. It continuously reads data from the
            stream until the termination characters are found at which point it returns the
            packet data. For example, all the packets using the interface are followed by
            0xABCD. This data can either be a part of each packet that is kept or something
            which is known only by the Terminated Stream Protocol and simply thrown away.
          parameters:
          - name: Write Termination Characters
            required: true
            description: The data to write to the stream after writing a command packet. Given
              as a hex string such as 0xABCD.
            values: ".+"
          - name: Read Termination Characters
            required: true
            description: The characters at the end of the stream which delineate the end of
              a telemetry packet. Given as a hex string such as 0xABCD.
            values: ".+"
          - name: Strip Read Termination
            required: false
            description: Whether to remove the read termination characters from the stream
              before returning the telemetry packet. Default is true.
            values:
            - 'true'
            - 'false'
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes including the sync pattern
              if the sync pattern is being used. Default is 0 (do not discard bytes)
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is nil (no sync pattern)
            values: ".+"
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets Default
              is false
            values:
            - 'false'
            - 'true'
        PREIDENTIFIED:
          description: The Preidentified Stream Protocol is used internally by the OpenC3
            Command and Telemetry Server only and delineates packets using a custom OpenC3
            header. This stream Protocol is configured by default on port 7779 and is created
            by the Command and Telemetry Server to allow tools to connect and receive the
            entire packet stream. The Telemetry Grapher uses this port to receive all the
            packets following through the Command and Telemetry Server in case any need to
            be graphed.
          parameters:
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              AFTER the sync pattern will be returned. The sync pattern itself is discarded.
              Default is nil (no sync pattern)
            values: ".+"
          - name: Max Length
            required: false
            description: The maximum allowed value in the length field. Default is nil (no
              maximum length)
            values: ".+"
        TEMPLATE:
          description: !binary |-
            VGhlIFRlbXBsYXRlIFN0cmVhbSBQcm90b2NvbCB3b3JrcyBtdWNoIGxpa2UgdGhlIFRlcm1pbmF0ZWQgU3RyZWFtIFByb3RvY29sIGV4Y2VwdCBpdCBkZXNpZ25lZCBmb3IgdGV4dC1iYXNlZCBjb21tYW5kIGFuZCByZXNwb25zZSB0eXBlIGludGVyZmFjZXMgc3VjaCBhcyBTQ1BJIChTdGFuZGFyZCBDb21tYW5kcyBmb3IgUHJvZ3JhbW1hYmxlIEluc3RydW1lbnRzKS4gSXQgZGVsaW5lYXRlcyBwYWNrZXRzIGluIHRoZSBzYW1lIHdheSBhcyB0aGUgdGVybWluYXRlZCBzdHJlYW0gcHJvdG9jb2wgZXhjZXB0IGVhY2ggcGFja2V0IGlzIHJlZmVycmVkIHRvIGFzIGEgbGluZSAoYmVjYXVzZSBlYWNoIHVzdWFsbHkgY29udGFpbnMgYSBsaW5lIG9mIHRleHQpLiBGb3Igb3V0Z29pbmcgcGFja2V0cyBhIENNRF9URU1QTEFURSBmaWVsZCBpcyBleHBlY3RlZCB0byBleGlzdCBpbiB0aGUgcGFja2V0LiBUaGlzIGZpZWxkIGNvbnRhaW5zIGEgdGVtcGxhdGUgc3RyaW5nIHdpdGggaXRlbXMgdG8gYmUgZmlsbGVkIGluIGRlbGluaWF0ZWQgd2l0aGluIEhUTUwgdGFnIHN0eWxlIGJyYWNrZXRzIOKAnCIuIFRoZSBUZW1wbGF0ZSBTdHJlYW0gUHJvdG9jb2wgd2lsbCByZWFkIHRoZSBuYW1lZCBpdGVtcyBmcm9tIHdpdGhpbiB0aGUgcGFja2V0IGZpbGwgaW4gdGhlIENNRF9URU1QTEFURS4gVGhpcyBmaWxsZWQgaW4gc3RyaW5nIGlzIHRoZW4gc2VudCBvdXQgcmF0aGVyIHRoYW4gdGhlIG9yaWdpbmFsbHkgcGFzc2VkIGluIHBhY2tldC4gQ29ycmVzcG9uZGluZ2x5LCBpZiBhIHJlc3BvbnNlIGlzIGV4cGVjdGVkIHRoZSBvdXRnb2luZyBwYWNrZXQgc2hvdWxkIGluY2x1ZGUgYSBSU1BfVEVNUExBVEUgYW5kIFJTUF9QQUNLRVQgZmllbGQuIFRoZSBSU1BfVEVNUExBVEUgaXMgdXNlZCB0byBleHRyYWN0IGRhdGEgZnJvbSB0aGUgcmVzcG9uc2Ugc3RyaW5nIGFuZCBidWlsZCBhIGNvcnJlc3BvbmRpbmcgUlNQX1BBQ0tFVC4gU2VlIHRoZSBURU1QTEFURSB0YXJnZXQgd2l0aGluIHRoZSBPcGVuQzMgRGVtbyBjb25maWd1cmF0aW9uIGZvciBhbiBleGFtcGxlIG9mIHVzYWdlLg==
          parameters:
          - name: Write Termination Characters
            required: true
            description: The data to write to the stream after writing a command packet. Given
              as a hex string such as 0xABCD.
            values: ".+"
          - name: Read Termination Characters
            required: true
            description: The characters at the end of the stream which delineate the end of
              a telemetry packet. Given as a hex string such as 0xABCD.
            values: ".+"
          - name: Ignore Lines
            required: false
            description: Number of response lines to ignore (completely drop). Default is
              0.
            values: "\\d+"
          - name: Initial Read Delay
            required: false
            description: An initial delay after connecting after which the stream will be
              read till empty and data dropped. Useful for discarding connect headers and
              initial prompts. Default is nil (no initial read).
            values: ".+"
          - name: Response Lines
            required: false
            description: The number of lines that make up expected responses. Default is 1.
            values: "\\d+"
          - name: Strip Read Termination
            required: false
            description: Whether to remove the read termination characters from the stream
              before returning the telemetry packet. Default is true.
            values:
            - 'true'
            - 'false'
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes including the sync pattern
              if the sync pattern is being used. Default is 0 (do not discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is nil (no sync pattern).
            values: ".+"
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets. Default
              is false.
            values:
            - 'false'
            - 'true'
          - name: Response Timeout
            required: false
            description: Number of seconds to wait before timing out when waiting for a response.
              Default is 5 seconds.
            values: ".+"
          - name: Response Polling Period
            required: false
            description: Number of seconds to wait between polling for a response. Default
              is 0.02 seconds.
            values: ".+"
          - name: Error Action
            required: false
            description: How to handle errors in the protocol like unexpected responses or
              response timeouts. 'DISCONNECT' to disconnect after errors. The default is 'LOG'
              to log an error and continue.
            values:
            - LOG
            - DISCONNECT
udp_interface.rb:
  description: The UDP interface uses UDP packets to send and receive telemetry
    from the target
  parameters:
    - name: Host
      required: true
      description: Machine name to connect to. Can be either a named
        machine (DNS entry) or IP address.
      values: .+
    - name: Write Port
      required: true
      description: Port which OpenC3 writes commands to
      values: \d{2,5}
    - name: Read Port
      required: true
      description: Port which OpenC3 reads telemetry from
      values: \d{2,5}
    - name: Write Source Port
      required: false
      description: Port on the local machine to send commands from. Default is
        'nil' (socket is not bound to an outgoing port).
      values: \d{2,5}
    - name: Inteface Address
      required: false
      description:
        If the remote machine supports multicast the interface address
        is used to configure the outgoing multicast address
      values: .+
    - name: Time To Live
      required: false
      description: The number of intermediate routers allowed before dropping the packet
      values: .+
    - name: Write Timeout
      required: false
      description:
        Number of seconds to wait before aborting the write. Default is
        'nil' (block on write).
      values: .+
    - name: Read Timeout
      required: false
      description:
        Number of seconds to wait before aborting the read. Default is
        'nil' (block on read).
      values: .+
    - name: Bind Address
      required: false
      description: Address to bind UDP ports to
      values: .+
serial_interface.rb:
  description: Connects to a target over a serial port. OpenC3 provides drivers
    for both Windows and POSIX drivers for UNIX based systems.
  parameters:
    - name: Write Port
      required: true
      description:
        Name of the serial port to write, e.g. 'COM1' or '/dev/ttyS0'.
        Pass 'nil' to disable writing.
      values: \d{2,5}
    - name: Read Port
      required: true
      description: Name of the serial port to read, e.g. 'COM1' or '/dev/ttyS0'.
        Pass 'nil' to disable reading.
      values: \d{2,5}
    - name: Baud Rate
      required: true
      description: Baud rate to read and write
      values: .+
    - name: Parity
      required: true
      description: Serial port parity
      values: ["NONE", "EVENT", "ODD"]
    - name: Stop Bits
      required: true
      description: Number of stop bits
      values: .+
    - name: Write Timeout
      required: true
      description: Number of seconds to wait before aborting the write.
        Pass 'nil' to block on write.
      values: .+
    - name: Read Timeout
      required: true
      description: Number of seconds to wait before aborting the read.
        Pass 'nil' to block on read.
      values: .+
    - name: Protocol Type
      required: true
      description: Protocol to apply on the interface data
      values: BURST:
          description: The Burst Stream Protocol simply reads as much data as it can from
            the stream before returning the data as a OpenC3 Packet. This Protocol relies
            on regular bursts of data delimited by time and thus is not very robust. However
            it can utilize a sync pattern which does allow it to re-sync from the stream if
            necessary.
          parameters:
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes starting with the sync pattern
              if the sync pattern is being used. Default is 0 (don't discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is 'nil' (no sync pattern).
            values: ".+"
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets Default
              is false.
            values:
            - 'true'
            - 'false'
        FIXED:
          description: The Fixed Stream Protocol reads a preset minimum amount of data from
            the stream which is necessary to properly identify all the defined packets using
            the interface. It then identifies the packet and proceeds to read as much data
            from the stream as necessary to create the packet which it then returns. This
            stream relies on all the packets on the interface being fixed in length. For example,
            all the packets using the interface are a fixed size and contain a simple header
            with a 32 bit sync pattern followed by a 16 bit ID. The Fixed Stream Protocol
            would elegantly handle this case with a minimum read size of 6 bytes.
          parameters:
          - name: Minimum ID Size
            required: true
            description: The minimum amount of bytes needed to identify a packet. All the
              packet definitions must declare their ID_ITEM(s) within this given amount of
              bytes.
            values: "\\d+"
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes starting with the sync pattern
              if the sync pattern is being used. Default is 0 (do not discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is 'nil' (no sync pattern).
            values: ".+"
          - name: Telemetry Stream
            required: false
            description: Whether the stream is returning telemetry. Default is true.
            values:
            - 'true'
            - 'false'
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets. Default
              is false.
            values:
            - 'false'
            - 'true'
        LENGTH:
          description: The Length Stream Protocol depends on a length field at a fixed location
            in the defined packets using the interface. It then reads enough data to grab
            the length field, decodes it, and reads the remaining length of the packet. For
            example, all the packets using the interface contain a CCSDS header with a length
            field. The Length Stream Protocol can be set up to handle the length field and
            even the "length - 1" offset the CCSDS header uses.
          parameters:
          - name: Length Bit Offset
            required: false
            description: The bit offset of the length field. Every packet using this interface
              must have the same structure such that the length field is the same size at
              the same location. Be sure to account for the length of the Sync Pattern in
              this value (if present). Default is 0.
            values: "\\d+"
          - name: Length Bit Size
            required: false
            description: The size in bits of the length field. Default is 16.
            values: "\\d+"
          - name: Length Value Offset
            required: false
            description: The offset to apply to the length field value. For example if the
              length field indicates packet length minus one, this value should be one. Be
              sure to account for the length of the Sync Pattern in this value (if present).
              Default is 0.
            values: "\\d+"
          - name: Bytes per Count
            required: false
            description: The number of bytes per each length field 'count'. This is used if
              the units of the length field is something other than bytes, for example if
              the length field count is in words. Default is 1.
            values: "\\d+"
          - name: Length Endianness
            required: false
            description: The endianness of the length field.
            values:
            - BIG_ENDIAN
            - LITTLE_ENDIAN
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes including the sync pattern
              if the sync pattern is being used. Discarding is one of the very last steps
              so any size and offsets above need to account for all the data before discarding.
              Default is 0 (do not discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is nil (no sync pattern)
            values: ".+"
          - name: Max Length
            required: false
            description: The maximum allowed value in the length field. Default is nil (no
              maximum length)
            values: ".+"
          - name: Fill Length and Sync Pattern
            required: false
            description: Setting this flag to true causes the length field and sync pattern
              (if present) to be filled automatically on outgoing packets. Default is false
            values:
            - 'false'
            - 'true'
        TERMINATED:
          description: The Terminated Stream Protocol delineates packets using termination
            characters found at the end of every packet. It continuously reads data from the
            stream until the termination characters are found at which point it returns the
            packet data. For example, all the packets using the interface are followed by
            0xABCD. This data can either be a part of each packet that is kept or something
            which is known only by the Terminated Stream Protocol and simply thrown away.
          parameters:
          - name: Write Termination Characters
            required: true
            description: The data to write to the stream after writing a command packet. Given
              as a hex string such as 0xABCD.
            values: ".+"
          - name: Read Termination Characters
            required: true
            description: The characters at the end of the stream which delineate the end of
              a telemetry packet. Given as a hex string such as 0xABCD.
            values: ".+"
          - name: Strip Read Termination
            required: false
            description: Whether to remove the read termination characters from the stream
              before returning the telemetry packet. Default is true.
            values:
            - 'true'
            - 'false'
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes including the sync pattern
              if the sync pattern is being used. Default is 0 (do not discard bytes)
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is nil (no sync pattern)
            values: ".+"
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets Default
              is false
            values:
            - 'false'
            - 'true'
        PREIDENTIFIED:
          description: The Preidentified Stream Protocol is used internally by the OpenC3
            Command and Telemetry Server only and delineates packets using a custom OpenC3
            header. This stream Protocol is configured by default on port 7779 and is created
            by the Command and Telemetry Server to allow tools to connect and receive the
            entire packet stream. The Telemetry Grapher uses this port to receive all the
            packets following through the Command and Telemetry Server in case any need to
            be graphed.
          parameters:
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              AFTER the sync pattern will be returned. The sync pattern itself is discarded.
              Default is nil (no sync pattern)
            values: ".+"
          - name: Max Length
            required: false
            description: The maximum allowed value in the length field. Default is nil (no
              maximum length)
            values: ".+"
        TEMPLATE:
          description: !binary |-
            VGhlIFRlbXBsYXRlIFN0cmVhbSBQcm90b2NvbCB3b3JrcyBtdWNoIGxpa2UgdGhlIFRlcm1pbmF0ZWQgU3RyZWFtIFByb3RvY29sIGV4Y2VwdCBpdCBkZXNpZ25lZCBmb3IgdGV4dC1iYXNlZCBjb21tYW5kIGFuZCByZXNwb25zZSB0eXBlIGludGVyZmFjZXMgc3VjaCBhcyBTQ1BJIChTdGFuZGFyZCBDb21tYW5kcyBmb3IgUHJvZ3JhbW1hYmxlIEluc3RydW1lbnRzKS4gSXQgZGVsaW5lYXRlcyBwYWNrZXRzIGluIHRoZSBzYW1lIHdheSBhcyB0aGUgdGVybWluYXRlZCBzdHJlYW0gcHJvdG9jb2wgZXhjZXB0IGVhY2ggcGFja2V0IGlzIHJlZmVycmVkIHRvIGFzIGEgbGluZSAoYmVjYXVzZSBlYWNoIHVzdWFsbHkgY29udGFpbnMgYSBsaW5lIG9mIHRleHQpLiBGb3Igb3V0Z29pbmcgcGFja2V0cyBhIENNRF9URU1QTEFURSBmaWVsZCBpcyBleHBlY3RlZCB0byBleGlzdCBpbiB0aGUgcGFja2V0LiBUaGlzIGZpZWxkIGNvbnRhaW5zIGEgdGVtcGxhdGUgc3RyaW5nIHdpdGggaXRlbXMgdG8gYmUgZmlsbGVkIGluIGRlbGluaWF0ZWQgd2l0aGluIEhUTUwgdGFnIHN0eWxlIGJyYWNrZXRzIOKAnCIuIFRoZSBUZW1wbGF0ZSBTdHJlYW0gUHJvdG9jb2wgd2lsbCByZWFkIHRoZSBuYW1lZCBpdGVtcyBmcm9tIHdpdGhpbiB0aGUgcGFja2V0IGZpbGwgaW4gdGhlIENNRF9URU1QTEFURS4gVGhpcyBmaWxsZWQgaW4gc3RyaW5nIGlzIHRoZW4gc2VudCBvdXQgcmF0aGVyIHRoYW4gdGhlIG9yaWdpbmFsbHkgcGFzc2VkIGluIHBhY2tldC4gQ29ycmVzcG9uZGluZ2x5LCBpZiBhIHJlc3BvbnNlIGlzIGV4cGVjdGVkIHRoZSBvdXRnb2luZyBwYWNrZXQgc2hvdWxkIGluY2x1ZGUgYSBSU1BfVEVNUExBVEUgYW5kIFJTUF9QQUNLRVQgZmllbGQuIFRoZSBSU1BfVEVNUExBVEUgaXMgdXNlZCB0byBleHRyYWN0IGRhdGEgZnJvbSB0aGUgcmVzcG9uc2Ugc3RyaW5nIGFuZCBidWlsZCBhIGNvcnJlc3BvbmRpbmcgUlNQX1BBQ0tFVC4gU2VlIHRoZSBURU1QTEFURSB0YXJnZXQgd2l0aGluIHRoZSBPcGVuQzMgRGVtbyBjb25maWd1cmF0aW9uIGZvciBhbiBleGFtcGxlIG9mIHVzYWdlLg==
          parameters:
          - name: Write Termination Characters
            required: true
            description: The data to write to the stream after writing a command packet. Given
              as a hex string such as 0xABCD.
            values: ".+"
          - name: Read Termination Characters
            required: true
            description: The characters at the end of the stream which delineate the end of
              a telemetry packet. Given as a hex string such as 0xABCD.
            values: ".+"
          - name: Ignore Lines
            required: false
            description: Number of response lines to ignore (completely drop). Default is
              0.
            values: "\\d+"
          - name: Initial Read Delay
            required: false
            description: An initial delay after connecting after which the stream will be
              read till empty and data dropped. Useful for discarding connect headers and
              initial prompts. Default is nil (no initial read).
            values: ".+"
          - name: Response Lines
            required: false
            description: The number of lines that make up expected responses. Default is 1.
            values: "\\d+"
          - name: Strip Read Termination
            required: false
            description: Whether to remove the read termination characters from the stream
              before returning the telemetry packet. Default is true.
            values:
            - 'true'
            - 'false'
          - name: Discard Leading Bytes
            required: false
            description: The number of bytes to discard from the binary data after reading
              from the stream. Note that this applies to bytes including the sync pattern
              if the sync pattern is being used. Default is 0 (do not discard bytes).
            values: "\\d+"
          - name: Sync Pattern
            required: false
            description: Hex string representing a byte pattern that will be searched for
              in the raw stream. This pattern represents a packet delimiter and all data found
              including the sync pattern will be returned. Default is nil (no sync pattern).
            values: ".+"
          - name: Fill Sync Pattern
            required: false
            description: Whether or not to fill in the sync pattern on outgoing packets. Default
              is false.
            values:
            - 'false'
            - 'true'
          - name: Response Timeout
            required: false
            description: Number of seconds to wait before timing out when waiting for a response.
              Default is 5 seconds.
            values: ".+"
          - name: Response Polling Period
            required: false
            description: Number of seconds to wait between polling for a response. Default
              is 0.02 seconds.
            values: ".+"
          - name: Error Action
            required: false
            description: How to handle errors in the protocol like unexpected responses or
              response timeouts. 'DISCONNECT' to disconnect after errors. The default is 'LOG'
              to log an error and continue.
            values:
            - LOG
            - DISCONNECT
cmd_tlm_server_interface.rb:
  description: Provides a connection to the OpenC3 Command and Telemetry Server.
    This allows scripts and other OpenC3 tools to send commands to the CmdTlmServer
    to enable and disable logging. It also allows scripts and other tools to
    receive a OpenC3 version information packet and a limits change packet which
    is sent when any telemetry items change limits states. The CmdTlmServer
    interface can be used by any OpenC3 configuration.
linc_interface.rb:
  description: The LINC interface uses a single TCPIP socket to talk to a Ball
    Aerospace LINC Labview target.
  parameters:
    - name: Host
      required: true
      description: Machine name to connect to. Can be either a named
        machine (DNS entry) or IP address.
      values: .+
    - name: Port
      required: true
      description: Port to write commands to and read telemetry from
      values: \d{2,5}
    - name: Handshake Enabled
      required: false
      description: Enable command handshaking where commands block until the
        corresponding handshake message is received. Default is true.
      values: ["true", "false"]
    - name: Response Timeout
      required: false
      description: Number of seconds to wait for a handshaking response.
        Default is 5 seconds
      values: \d+
    - name: Read Timeout
      required: true
      description: Number of seconds to wait before aborting the read.
        Pass 'nil' to block on read. Default is nil.
      values: .+
    - name: Write Timeout
      required: true
      description: Number of seconds to wait before aborting the write.
        Pass 'nil' to block on write. Default is 5 seconds.
      values: .+
    - name: Length Bit Offset
      required: false
      description: The bit offset of the length field. Every packet using this
        interface must have the same structure such that the length field is the
        same size at the same location. Default is 0.
      values: \d+
    - name: Length Bit Size
      required: false
      description: The size in bits of the length field. Default is 16 bits.
      values: \d+
    - name: Length Value Offset
      required: false
      description: The offset to apply to the length field value. For example if
        the length field indicates packet length minus one, this value should be one.
        Default is 4.
      values: \d+
    - name: GUID Fieldname
      required: false
      description: Fieldname of the GUID field. Default is 'HDR_GUID'.
      values: .+
    - name: Length Endianness
      required: false
      description: The endianness of the length field. Default is BIG_ENDIAN.
      values: ["BIG_ENDIAN", "LITTLE_ENDIAN"]
    - name: Length Fieldname
      required: false
      description: Fieldname of the length field. Defaults is 'HDR_LENGTH'.
      values: .+
