import { format, sub } from 'date-fns'

function getDate(date) {
  return format(date, 'yyyy-MM-dd')
}
function getStartTime(date, minutes = 5) {
  return format(sub(date, { minutes: minutes }), 'HH:mm:ss')
}
function getEndTime(date) {
  return format(date, 'HH:mm:ss')
}
function getFilename(date, minutes = 5) {
  return format(sub(date, { minutes: minutes }), 'yyyy_MM_dd_HH_mm_ss') + '.csv'
}

describe('TlmExtractor', () => {
  it('creates CSV output', function() {
    const now = new Date()
    cy.visit('/telemetry-extractor')
    cy.hideNav()
    cy.get('[data-test=startdate]')
      .clear()
      .type(getDate(now))
    cy.focused().click({ force: true })
    cy.get('[data-test=enddate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=starttime]')
      .clear()
      .type(getStartTime(now))
    cy.focused().click()
    cy.get('[data-test=endtime]')
      .clear()
      .type(getEndTime(now))
    cy.focused().click()
    cy.selectTargetPacketItem('INST', 'HEALTH_STATUS', 'TEMP1')
    cy.contains('Add Item').click()
    cy.selectTargetPacketItem('INST', 'HEALTH_STATUS', 'TEMP2')
    cy.contains('Add Item').click()
    cy.contains('Process').click()
    cy.wait(5000)
    cy.contains('Download File').click()
    cy.readFile('cypress/downloads/' + getFilename(now)).then(contents => {
      // Check that we handle raw value types set by the demo
      expect(contents).to.contain('NaN')
      expect(contents).to.contain('Infinity')
      expect(contents).to.contain('-Infinity')
      var lines = contents.split('\n')
      expect(lines[0]).to.contain('TEMP1')
      expect(lines[0]).to.contain('TEMP2')
      expect(lines.length).to.be.greaterThan(300) // 5 min at 60Hz is 300 samples
    })
  })

  it('creates tab delimited output', function() {
    const now = new Date()
    cy.visit('/telemetry-extractor')
    cy.hideNav()
    cy.get('.v-toolbar')
      .contains('File')
      .click()
    cy.contains(/^Tab Delimited File$/).click()
    cy.get('[data-test=startdate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=enddate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=starttime]')
      .clear()
      .type(getStartTime(now))
    cy.focused().click()
    cy.get('[data-test=endtime]')
      .clear()
      .type(getEndTime(now))
    cy.focused().click()
    cy.selectTargetPacketItem('INST', 'HEALTH_STATUS', 'TEMP1')
    cy.contains('Add Item').click()
    cy.selectTargetPacketItem('INST', 'HEALTH_STATUS', 'TEMP2')
    cy.contains('Add Item').click()
    cy.contains('Process').click()
    cy.wait(5000)
    cy.contains('Download File').click()
  })

  it('outputs full column names', function() {
    const now = new Date()
    cy.visit('/telemetry-extractor')
    cy.hideNav()
    cy.get('.v-toolbar')
      .contains('File')
      .click()
    cy.contains(/^Use Full Column Names$/).click()
    cy.get('[data-test=startdate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=enddate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=starttime]')
      .clear()
      .type(getStartTime(now))
    cy.focused().click()
    cy.get('[data-test=endtime]')
      .clear()
      .type(getEndTime(now))
    cy.focused().click()
    cy.selectTargetPacketItem('INST', 'HEALTH_STATUS', 'TEMP1')
    cy.contains('Add Item').click()
    cy.selectTargetPacketItem('INST', 'HEALTH_STATUS', 'TEMP2')
    cy.contains('Add Item').click()
    cy.contains('Process').click()
    cy.wait(5000)
    cy.contains('Download File').click()
  })

  it('triggers warning with duplicate item', function() {
    const now = new Date()
    cy.visit('/telemetry-extractor')
    cy.hideNav()
    cy.get('[data-test=startdate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=enddate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=starttime]')
      .clear()
      .type(getStartTime(now))
    cy.focused().click()
    cy.get('[data-test=endtime]')
      .clear()
      .type(getEndTime(now))
    cy.focused().click()
    // Add the first item, INST/ADCS/CCSDSVER
    cy.contains('Add Item').click()
    cy.contains('Add Item').click()
    cy.contains('This item has already been added').should('be.visible')
  })

  it('outputs Matlab headers', function() {
    const now = new Date()
    cy.visit('/telemetry-extractor')
    cy.hideNav()
    cy.get('.v-toolbar')
      .contains('File')
      .click()
    cy.contains(/^Tab Delimited File$/).click()
    cy.get('.v-toolbar')
      .contains('Mode')
      .click()
    cy.contains(/^Use Matlab Header$/).click()
    cy.get('[data-test=startdate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=enddate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=starttime]')
      .clear()
      .type(getStartTime(now))
    cy.focused().click()
    cy.get('[data-test=endtime]')
      .clear()
      .type(getEndTime(now))
    cy.focused().click()
    cy.selectTargetPacketItem('INST', 'ADCS', 'Q1')
    cy.contains('Add Item').click()
    cy.selectTargetPacketItem('INST', 'ADCS', 'Q2')
    cy.contains('Add Item').click()
    cy.selectTargetPacketItem('INST', 'ADCS', 'PACKET_TIMEFORMATTED')
    cy.contains('Add Item').click()
    cy.contains('Process').click()
    cy.wait(9000)
    cy.contains('Download File').click()
  })

  it('outputs unique values only', function() {
    const now = new Date()
    cy.visit('/telemetry-extractor')
    cy.hideNav()
    cy.get('.v-toolbar')
      .contains('Mode')
      .click()
    cy.contains(/^Unique Only$/).click()
    cy.get('[data-test=startdate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=enddate]')
      .clear()
      .type(getDate(now))
    cy.focused().click()
    cy.get('[data-test=starttime]')
      .clear()
      .type(getStartTime(now))
    cy.focused().click()
    cy.get('[data-test=endtime]')
      .clear()
      .type(getEndTime(now))
    cy.focused().click()
    cy.selectTargetPacketItem('INST', 'ADCS', 'Q1')
    cy.contains('Add Item').click()
    cy.selectTargetPacketItem('INST', 'ADCS', 'Q2')
    cy.contains('Add Item').click()
    cy.selectTargetPacketItem('INST', 'ADCS', 'PACKET_TIMEFORMATTED')
    cy.contains('Add Item').click()
    cy.contains('Process').click()
    cy.wait(10000)
    cy.contains('Download File').click()
  })

  it('deletes items', function() {
    cy.visit('/telemetry-extractor')
    cy.hideNav()
    cy.selectTargetPacketItem('INST', 'ADCS', 'Q1')
    cy.contains('Add Item').click()
    cy.selectTargetPacketItem('INST', 'ADCS', 'Q2')
    cy.contains('Add Item').click()
    cy.selectTargetPacketItem('INST', 'ADCS', 'PACKET_TIMEFORMATTED')
    cy.contains('Add Item').click()
    cy.contains('INST - ADCS - Q1').click()
    cy.contains('Delete Item(s)').click()
    cy.contains('INST - ADCS - Q2').click()
    cy.contains('Delete Item(s)').click()
  })
})
