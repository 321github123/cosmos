# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Cosmos 5 Playwright Tests

# Only run on a push to master to avoid running for all the dependabot PRs
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  cosmos-build-test-scan:
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: cosmos-control.sh build
        # This `shell` line is required to get around a known issue: https://github.com/actions/runner/issues/241#issuecomment-745902718
        shell: 'script -q -e -c "bash {0}"'
        run: ./cosmos-control.sh build
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
          cache: "yarn"
          cache-dependency-path: "**/yarn.lock"
      - name: Install playwright dependencies
        run: yarn; yarn playwright install --with-deps
        working-directory: playwright
      - name: Check for test.only
        run: yarn playwright test --list --forbid-only
        working-directory: playwright
      - name: cosmos-control.sh run
        # This `shell` line is required to get around a known issue: https://github.com/actions/runner/issues/241#issuecomment-745902718
        shell: 'script -q -e -c "bash {0}"'
        run: ./cosmos-control.sh run
        # Allow the containers to spin up
      - name: Sleep for 2min
        run: sleep 120s
        shell: bash
        # Ensure we're connected and running
      - name: Wait for build
        run: yarn playwright test --project=chromium tests/wait-for-build.spec.ts
        working-directory: playwright
      - name: Run Playwright tests
        # Run separately to allow for parallelism
        run: |
          yarn playwright test --project=chromium
          # Temporarily disable firefox: https://github.com/microsoft/playwright/issues/13853
          # yarn playwright test --project=firefox
        working-directory: playwright
      - name: Upload test artifacts
        if: always() # Upload on pass or fail
        uses: actions/upload-artifact@v3
        with:
          name: playwright
          path: playwright/test-results
      - name: Run the Anchore scan action
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/ballaerospace/cosmosc2-base:latest"
          fail-build: false
          severity-cutoff: critical # low, medium, high, critical
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: base
      - name: Run the Anchore scan action
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/ballaerospace/cosmosc2-ruby:latest"
          fail-build: false
          severity-cutoff: critical # low, medium, high, critical
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: ruby
      - name: Run the Anchore scan action
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/ballaerospace/cosmosc2-node:latest"
          fail-build: false
          severity-cutoff: critical # low, medium, high, critical
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: node
      - name: Run the Anchore scan action
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/ballaerospace/cosmosc2-init:latest"
          fail-build: false
          severity-cutoff: critical # low, medium, high, critical
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: init
      - name: Run the Anchore scan action
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/ballaerospace/cosmosc2-redis:latest"
          fail-build: false
          severity-cutoff: critical # low, medium, high, critical
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: redis
      - name: Run the Anchore scan action
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/ballaerospace/cosmosc2-minio:latest"
          fail-build: false
          severity-cutoff: critical # low, medium, high, critical
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: minio
      - name: Run the Anchore scan action
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/ballaerospace/cosmosc2-operator:latest"
          fail-build: false
          severity-cutoff: critical # low, medium, high, critical
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: operator
      - name: Run the Anchore scan action
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/ballaerospace/cosmosc2-cmd-tlm-api:latest"
          fail-build: false
          severity-cutoff: critical # low, medium, high, critical
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: cmd-tlm-api
      - name: Run the Anchore scan action
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/ballaerospace/cosmosc2-script-runner-api:latest"
          fail-build: false
          severity-cutoff: critical # low, medium, high, critical
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: script-runner-api
      - name: Run the Anchore scan action
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/ballaerospace/cosmosc2-traefik:latest"
          fail-build: false
          severity-cutoff: critical # low, medium, high, critical
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: traefik
